---
- name: Install Docker dependencies (Debian/Ubuntu)
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  when: ansible_facts['os_family'] == "Debian"
  tags:
    - docker
    - install_docker

- name: Add Docker repository (Debian/Ubuntu)
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_facts['os_family'] == "Debian"
  tags:
    - docker
    - install_docker

- name: Install Docker (Debian/Ubuntu)
  ansible.builtin.apt:
    name: docker-ce
    state: present
  when: ansible_facts['os_family'] == "Debian"
  tags:
    - docker
    - install_docker

- name: Install Docker (RedHat/CentOS)
  ansible.builtin.dnf:
    name:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  tags:
    - docker
    - install_docker

- name: Add Docker repository (RedHat/CentOS)
  ansible.builtin.command: >
    yum-config-manager --add-repo
    https://download.docker.com/linux/centos/docker-ce.repo
  when: ansible_facts['os_family'] == "RedHat"
  changed_when: false
  tags:
    - docker
    - install_docker

- name: Install Docker CE (RedHat/CentOS)
  ansible.builtin.dnf:
    name: docker-ce
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  tags:
    - docker
    - install_docker

- name: Install Docker (Alpine)
  community.general.apk:
    name: docker
    state: present
  when: ansible_facts['os_family'] == "Alpine"
  tags:
    - docker
    - install_docker

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true
  tags:
    - docker
    - install_docker
